{% extends "layout.njk" %}
{% block  content %}

<!DOCTYPE html>
<html>
<head>
  <title>Reflected XSS Demo</title>

  <script>
    function toggleExplanation() {
      var explanation = document.getElementById('explanation');
      var button = document.getElementById('explanation-button');

      if (explanation.classList.contains('show')) {
        explanation.classList.remove('show');
        button.textContent = 'Show Explanation';
      } else {
        explanation.classList.add('show');
        button.textContent = 'Hide Explanation';
      }
    }

    function executeReflectedXSS() {
      var messageInput = document.getElementById('message');
      var message = messageInput.value;

      var listItem = document.createElement('li');
      listItem.innerHTML = message;
      listItem.classList.add('message');

      var messageList = document.getElementById('message-list');
      messageList.appendChild(listItem);
    }
  </script>
</head>
<body>
  <div class="rest">
      <h1>Reflected XSS Demo</h1>

      <h2>Enter your message:</h2>
      <h3>Try using this basic payload Try using this basic payload "iframe src=javascript:alert("XSS")" but add the code in <></h3>
      <input type="text" id="message" name="message">
      <button class="button-64" onclick="executeReflectedXSS()"><span>Submit (Reflected XSS)</span></button>

      <h2>Recent Messages:</h2>
      <ul id="message-list"></ul>

      <button id="explanation-button" class="button-64" onclick="toggleExplanation()"><span>Show Explanation</span></button>
      <div class="explanation" id="exp  lanation">
        <h2>Explanation:</h2>
        <p>
          The "Recent Messages" list displays messages entered by users. These messages can be potentially harmful if they contain malicious code.
        </p>
        <p>
          The "Submit (Reflected XSS)" button demonstrates the execution of user-entered code in real-time. The message is displayed and executed within the context of the page, but it is not saved or stored.
        </p>
        <p>
          Remember that in a real-world scenario, it's crucial to implement proper input validation, sanitization, and output encoding to prevent XSS vulnerabilities and protect your website and users from potential attacks.
        </p>
      </div>
    </div>
</body>
</html>


{% endblock %}